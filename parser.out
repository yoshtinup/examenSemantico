Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PREPROCESSOR

Grammar

Rule 0     S' -> program
Rule 1     program -> function_definition
Rule 2     function_definition -> INT ID LPAREN RPAREN LBRACE function_body RBRACE
Rule 3     function_body -> declarations statements
Rule 4     function_body -> statements
Rule 5     declarations -> declarations declaration
Rule 6     declarations -> declaration
Rule 7     declarations -> empty
Rule 8     declaration -> INT ID ASSIGN NUMBER SEMICOLON
Rule 9     declaration -> INT ID SEMICOLON
Rule 10    statements -> statements statement
Rule 11    statements -> statement
Rule 12    statements -> empty
Rule 13    statement -> for_loop
Rule 14    statement -> assignment_statement
Rule 15    statement -> return_statement
Rule 16    for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
Rule 17    assignment_expression -> ID ASSIGN expression
Rule 18    increment_expression -> ID INCREMENTO
Rule 19    increment_expression -> assignment_expression
Rule 20    assignment_statement -> ID ASSIGN expression SEMICOLON
Rule 21    return_statement -> RETURN expression SEMICOLON
Rule 22    condition -> expression LT expression
Rule 23    condition -> expression LE expression
Rule 24    condition -> expression GT expression
Rule 25    condition -> expression GE expression
Rule 26    condition -> expression EQ expression
Rule 27    condition -> expression NE expression
Rule 28    expression -> term
Rule 29    expression -> expression PLUS term
Rule 30    expression -> expression MINUS term
Rule 31    term -> factor
Rule 32    term -> term TIMES factor
Rule 33    term -> term DIVIDE factor
Rule 34    factor -> ID
Rule 35    factor -> NUMBER
Rule 36    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 8 17 20
DIVIDE               : 33
EQ                   : 26
FOR                  : 16
GE                   : 25
GT                   : 24
ID                   : 2 8 9 17 18 20 34
INCREMENTO           : 18
INT                  : 2 8 9
LBRACE               : 2 16
LE                   : 23
LPAREN               : 2 16
LT                   : 22
MINUS                : 30
NE                   : 27
NUMBER               : 8 35
PLUS                 : 29
PREPROCESSOR         : 
RBRACE               : 2 16
RETURN               : 21
RPAREN               : 2 16
SEMICOLON            : 8 9 16 16 20 21
TIMES                : 32
error                : 

Nonterminals, with rules where they appear

assignment_expression : 16 19
assignment_statement : 14
condition            : 16
declaration          : 5 6
declarations         : 3 5
empty                : 7 12
expression           : 17 20 21 22 22 23 23 24 24 25 25 26 26 27 27 29 30
factor               : 31 32 33
for_loop             : 13
function_body        : 2
function_definition  : 1
increment_expression : 16
program              : 0
return_statement     : 15
statement            : 10 11
statements           : 3 4 10 16
term                 : 28 29 30 32 33

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_definition
    (2) function_definition -> . INT ID LPAREN RPAREN LBRACE function_body RBRACE

    INT             shift and go to state 3

    program                        shift and go to state 1
    function_definition            shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function_definition .

    $end            reduce using rule 1 (program -> function_definition .)


state 3

    (2) function_definition -> INT . ID LPAREN RPAREN LBRACE function_body RBRACE

    ID              shift and go to state 4


state 4

    (2) function_definition -> INT ID . LPAREN RPAREN LBRACE function_body RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function_definition -> INT ID LPAREN . RPAREN LBRACE function_body RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function_definition -> INT ID LPAREN RPAREN . LBRACE function_body RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function_definition -> INT ID LPAREN RPAREN LBRACE . function_body RBRACE
    (3) function_body -> . declarations statements
    (4) function_body -> . statements
    (5) declarations -> . declarations declaration
    (6) declarations -> . declaration
    (7) declarations -> . empty
    (10) statements -> . statements statement
    (11) statements -> . statement
    (12) statements -> . empty
    (8) declaration -> . INT ID ASSIGN NUMBER SEMICOLON
    (9) declaration -> . INT ID SEMICOLON
    (36) empty -> .
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    INT             shift and go to state 8
    RBRACE          reduce using rule 36 (empty -> .)
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

  ! INT             [ reduce using rule 36 (empty -> .) ]
  ! FOR             [ reduce using rule 36 (empty -> .) ]
  ! ID              [ reduce using rule 36 (empty -> .) ]
  ! RETURN          [ reduce using rule 36 (empty -> .) ]

    function_body                  shift and go to state 10
    declarations                   shift and go to state 11
    statements                     shift and go to state 12
    declaration                    shift and go to state 13
    empty                          shift and go to state 14
    statement                      shift and go to state 15
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 8

    (8) declaration -> INT . ID ASSIGN NUMBER SEMICOLON
    (9) declaration -> INT . ID SEMICOLON

    ID              shift and go to state 21


state 9

    (20) assignment_statement -> ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 22


state 10

    (2) function_definition -> INT ID LPAREN RPAREN LBRACE function_body . RBRACE

    RBRACE          shift and go to state 23


state 11

    (3) function_body -> declarations . statements
    (5) declarations -> declarations . declaration
    (10) statements -> . statements statement
    (11) statements -> . statement
    (12) statements -> . empty
    (8) declaration -> . INT ID ASSIGN NUMBER SEMICOLON
    (9) declaration -> . INT ID SEMICOLON
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (36) empty -> .
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    INT             shift and go to state 8
    RBRACE          reduce using rule 36 (empty -> .)
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

  ! FOR             [ reduce using rule 36 (empty -> .) ]
  ! ID              [ reduce using rule 36 (empty -> .) ]
  ! RETURN          [ reduce using rule 36 (empty -> .) ]

    statements                     shift and go to state 24
    declaration                    shift and go to state 25
    statement                      shift and go to state 15
    empty                          shift and go to state 26
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 12

    (4) function_body -> statements .
    (10) statements -> statements . statement
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

    RBRACE          reduce using rule 4 (function_body -> statements .)
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

    statement                      shift and go to state 27
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 13

    (6) declarations -> declaration .

    INT             reduce using rule 6 (declarations -> declaration .)
    FOR             reduce using rule 6 (declarations -> declaration .)
    ID              reduce using rule 6 (declarations -> declaration .)
    RETURN          reduce using rule 6 (declarations -> declaration .)
    RBRACE          reduce using rule 6 (declarations -> declaration .)


state 14

    (7) declarations -> empty .
    (12) statements -> empty .

  ! reduce/reduce conflict for FOR resolved using rule 7 (declarations -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 7 (declarations -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (declarations -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 7 (declarations -> empty .)
    INT             reduce using rule 7 (declarations -> empty .)
    FOR             reduce using rule 7 (declarations -> empty .)
    ID              reduce using rule 7 (declarations -> empty .)
    RETURN          reduce using rule 7 (declarations -> empty .)
    RBRACE          reduce using rule 7 (declarations -> empty .)

  ! FOR             [ reduce using rule 12 (statements -> empty .) ]
  ! ID              [ reduce using rule 12 (statements -> empty .) ]
  ! RETURN          [ reduce using rule 12 (statements -> empty .) ]
  ! RBRACE          [ reduce using rule 12 (statements -> empty .) ]


state 15

    (11) statements -> statement .

    FOR             reduce using rule 11 (statements -> statement .)
    ID              reduce using rule 11 (statements -> statement .)
    RETURN          reduce using rule 11 (statements -> statement .)
    RBRACE          reduce using rule 11 (statements -> statement .)


state 16

    (13) statement -> for_loop .

    FOR             reduce using rule 13 (statement -> for_loop .)
    ID              reduce using rule 13 (statement -> for_loop .)
    RETURN          reduce using rule 13 (statement -> for_loop .)
    RBRACE          reduce using rule 13 (statement -> for_loop .)


state 17

    (14) statement -> assignment_statement .

    FOR             reduce using rule 14 (statement -> assignment_statement .)
    ID              reduce using rule 14 (statement -> assignment_statement .)
    RETURN          reduce using rule 14 (statement -> assignment_statement .)
    RBRACE          reduce using rule 14 (statement -> assignment_statement .)


state 18

    (15) statement -> return_statement .

    FOR             reduce using rule 15 (statement -> return_statement .)
    ID              reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    RBRACE          reduce using rule 15 (statement -> return_statement .)


state 19

    (16) for_loop -> FOR . LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 28


state 20

    (21) return_statement -> RETURN . expression SEMICOLON
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 21

    (8) declaration -> INT ID . ASSIGN NUMBER SEMICOLON
    (9) declaration -> INT ID . SEMICOLON

    ASSIGN          shift and go to state 34
    SEMICOLON       shift and go to state 35


state 22

    (20) assignment_statement -> ID ASSIGN . expression SEMICOLON
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 36
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 23

    (2) function_definition -> INT ID LPAREN RPAREN LBRACE function_body RBRACE .

    $end            reduce using rule 2 (function_definition -> INT ID LPAREN RPAREN LBRACE function_body RBRACE .)


state 24

    (3) function_body -> declarations statements .
    (10) statements -> statements . statement
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

    RBRACE          reduce using rule 3 (function_body -> declarations statements .)
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

    statement                      shift and go to state 27
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 25

    (5) declarations -> declarations declaration .

    INT             reduce using rule 5 (declarations -> declarations declaration .)
    FOR             reduce using rule 5 (declarations -> declarations declaration .)
    ID              reduce using rule 5 (declarations -> declarations declaration .)
    RETURN          reduce using rule 5 (declarations -> declarations declaration .)
    RBRACE          reduce using rule 5 (declarations -> declarations declaration .)


state 26

    (12) statements -> empty .

    FOR             reduce using rule 12 (statements -> empty .)
    ID              reduce using rule 12 (statements -> empty .)
    RETURN          reduce using rule 12 (statements -> empty .)
    RBRACE          reduce using rule 12 (statements -> empty .)


state 27

    (10) statements -> statements statement .

    FOR             reduce using rule 10 (statements -> statements statement .)
    ID              reduce using rule 10 (statements -> statements statement .)
    RETURN          reduce using rule 10 (statements -> statements statement .)
    RBRACE          reduce using rule 10 (statements -> statements statement .)


state 28

    (16) for_loop -> FOR LPAREN . assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (17) assignment_expression -> . ID ASSIGN expression

    ID              shift and go to state 38

    assignment_expression          shift and go to state 37

state 29

    (21) return_statement -> RETURN expression . SEMICOLON
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 30

    (28) expression -> term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 28 (expression -> term .)
    PLUS            reduce using rule 28 (expression -> term .)
    MINUS           reduce using rule 28 (expression -> term .)
    LT              reduce using rule 28 (expression -> term .)
    LE              reduce using rule 28 (expression -> term .)
    GT              reduce using rule 28 (expression -> term .)
    GE              reduce using rule 28 (expression -> term .)
    EQ              reduce using rule 28 (expression -> term .)
    NE              reduce using rule 28 (expression -> term .)
    RPAREN          reduce using rule 28 (expression -> term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 31

    (31) term -> factor .

    TIMES           reduce using rule 31 (term -> factor .)
    DIVIDE          reduce using rule 31 (term -> factor .)
    SEMICOLON       reduce using rule 31 (term -> factor .)
    PLUS            reduce using rule 31 (term -> factor .)
    MINUS           reduce using rule 31 (term -> factor .)
    LT              reduce using rule 31 (term -> factor .)
    LE              reduce using rule 31 (term -> factor .)
    GT              reduce using rule 31 (term -> factor .)
    GE              reduce using rule 31 (term -> factor .)
    EQ              reduce using rule 31 (term -> factor .)
    NE              reduce using rule 31 (term -> factor .)
    RPAREN          reduce using rule 31 (term -> factor .)


state 32

    (34) factor -> ID .

    TIMES           reduce using rule 34 (factor -> ID .)
    DIVIDE          reduce using rule 34 (factor -> ID .)
    SEMICOLON       reduce using rule 34 (factor -> ID .)
    PLUS            reduce using rule 34 (factor -> ID .)
    MINUS           reduce using rule 34 (factor -> ID .)
    LT              reduce using rule 34 (factor -> ID .)
    LE              reduce using rule 34 (factor -> ID .)
    GT              reduce using rule 34 (factor -> ID .)
    GE              reduce using rule 34 (factor -> ID .)
    EQ              reduce using rule 34 (factor -> ID .)
    NE              reduce using rule 34 (factor -> ID .)
    RPAREN          reduce using rule 34 (factor -> ID .)


state 33

    (35) factor -> NUMBER .

    TIMES           reduce using rule 35 (factor -> NUMBER .)
    DIVIDE          reduce using rule 35 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 35 (factor -> NUMBER .)
    PLUS            reduce using rule 35 (factor -> NUMBER .)
    MINUS           reduce using rule 35 (factor -> NUMBER .)
    LT              reduce using rule 35 (factor -> NUMBER .)
    LE              reduce using rule 35 (factor -> NUMBER .)
    GT              reduce using rule 35 (factor -> NUMBER .)
    GE              reduce using rule 35 (factor -> NUMBER .)
    EQ              reduce using rule 35 (factor -> NUMBER .)
    NE              reduce using rule 35 (factor -> NUMBER .)
    RPAREN          reduce using rule 35 (factor -> NUMBER .)


state 34

    (8) declaration -> INT ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 44


state 35

    (9) declaration -> INT ID SEMICOLON .

    INT             reduce using rule 9 (declaration -> INT ID SEMICOLON .)
    FOR             reduce using rule 9 (declaration -> INT ID SEMICOLON .)
    ID              reduce using rule 9 (declaration -> INT ID SEMICOLON .)
    RETURN          reduce using rule 9 (declaration -> INT ID SEMICOLON .)
    RBRACE          reduce using rule 9 (declaration -> INT ID SEMICOLON .)


state 36

    (20) assignment_statement -> ID ASSIGN expression . SEMICOLON
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 45
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 37

    (16) for_loop -> FOR LPAREN assignment_expression . SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 46


state 38

    (17) assignment_expression -> ID . ASSIGN expression

    ASSIGN          shift and go to state 47


state 39

    (21) return_statement -> RETURN expression SEMICOLON .

    FOR             reduce using rule 21 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 21 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 21 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 21 (return_statement -> RETURN expression SEMICOLON .)


state 40

    (29) expression -> expression PLUS . term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    term                           shift and go to state 48
    factor                         shift and go to state 31

state 41

    (30) expression -> expression MINUS . term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    term                           shift and go to state 49
    factor                         shift and go to state 31

state 42

    (32) term -> term TIMES . factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    factor                         shift and go to state 50

state 43

    (33) term -> term DIVIDE . factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    factor                         shift and go to state 51

state 44

    (8) declaration -> INT ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 52


state 45

    (20) assignment_statement -> ID ASSIGN expression SEMICOLON .

    FOR             reduce using rule 20 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 20 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 20 (assignment_statement -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 20 (assignment_statement -> ID ASSIGN expression SEMICOLON .)


state 46

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON . condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (22) condition -> . expression LT expression
    (23) condition -> . expression LE expression
    (24) condition -> . expression GT expression
    (25) condition -> . expression GE expression
    (26) condition -> . expression EQ expression
    (27) condition -> . expression NE expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    condition                      shift and go to state 53
    expression                     shift and go to state 54
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 47

    (17) assignment_expression -> ID ASSIGN . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 55
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 48

    (29) expression -> expression PLUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 29 (expression -> expression PLUS term .)
    PLUS            reduce using rule 29 (expression -> expression PLUS term .)
    MINUS           reduce using rule 29 (expression -> expression PLUS term .)
    LT              reduce using rule 29 (expression -> expression PLUS term .)
    LE              reduce using rule 29 (expression -> expression PLUS term .)
    GT              reduce using rule 29 (expression -> expression PLUS term .)
    GE              reduce using rule 29 (expression -> expression PLUS term .)
    EQ              reduce using rule 29 (expression -> expression PLUS term .)
    NE              reduce using rule 29 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 29 (expression -> expression PLUS term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 49

    (30) expression -> expression MINUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 30 (expression -> expression MINUS term .)
    PLUS            reduce using rule 30 (expression -> expression MINUS term .)
    MINUS           reduce using rule 30 (expression -> expression MINUS term .)
    LT              reduce using rule 30 (expression -> expression MINUS term .)
    LE              reduce using rule 30 (expression -> expression MINUS term .)
    GT              reduce using rule 30 (expression -> expression MINUS term .)
    GE              reduce using rule 30 (expression -> expression MINUS term .)
    EQ              reduce using rule 30 (expression -> expression MINUS term .)
    NE              reduce using rule 30 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 30 (expression -> expression MINUS term .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43


state 50

    (32) term -> term TIMES factor .

    TIMES           reduce using rule 32 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 32 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 32 (term -> term TIMES factor .)
    PLUS            reduce using rule 32 (term -> term TIMES factor .)
    MINUS           reduce using rule 32 (term -> term TIMES factor .)
    LT              reduce using rule 32 (term -> term TIMES factor .)
    LE              reduce using rule 32 (term -> term TIMES factor .)
    GT              reduce using rule 32 (term -> term TIMES factor .)
    GE              reduce using rule 32 (term -> term TIMES factor .)
    EQ              reduce using rule 32 (term -> term TIMES factor .)
    NE              reduce using rule 32 (term -> term TIMES factor .)
    RPAREN          reduce using rule 32 (term -> term TIMES factor .)


state 51

    (33) term -> term DIVIDE factor .

    TIMES           reduce using rule 33 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 33 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 33 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 33 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 33 (term -> term DIVIDE factor .)
    LT              reduce using rule 33 (term -> term DIVIDE factor .)
    LE              reduce using rule 33 (term -> term DIVIDE factor .)
    GT              reduce using rule 33 (term -> term DIVIDE factor .)
    GE              reduce using rule 33 (term -> term DIVIDE factor .)
    EQ              reduce using rule 33 (term -> term DIVIDE factor .)
    NE              reduce using rule 33 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 33 (term -> term DIVIDE factor .)


state 52

    (8) declaration -> INT ID ASSIGN NUMBER SEMICOLON .

    INT             reduce using rule 8 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    FOR             reduce using rule 8 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    ID              reduce using rule 8 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    RETURN          reduce using rule 8 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 8 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)


state 53

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition . SEMICOLON increment_expression RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 56


state 54

    (22) condition -> expression . LT expression
    (23) condition -> expression . LE expression
    (24) condition -> expression . GT expression
    (25) condition -> expression . GE expression
    (26) condition -> expression . EQ expression
    (27) condition -> expression . NE expression
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    LT              shift and go to state 57
    LE              shift and go to state 58
    GT              shift and go to state 59
    GE              shift and go to state 60
    EQ              shift and go to state 61
    NE              shift and go to state 62
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 55

    (17) assignment_expression -> ID ASSIGN expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 17 (assignment_expression -> ID ASSIGN expression .)
    RPAREN          reduce using rule 17 (assignment_expression -> ID ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 56

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON . increment_expression RPAREN LBRACE statements RBRACE
    (18) increment_expression -> . ID INCREMENTO
    (19) increment_expression -> . assignment_expression
    (17) assignment_expression -> . ID ASSIGN expression

    ID              shift and go to state 65

    assignment_expression          shift and go to state 63
    increment_expression           shift and go to state 64

state 57

    (22) condition -> expression LT . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 66
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 58

    (23) condition -> expression LE . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 67
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 59

    (24) condition -> expression GT . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 68
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 60

    (25) condition -> expression GE . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 69
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 61

    (26) condition -> expression EQ . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 70
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 62

    (27) condition -> expression NE . expression
    (28) expression -> . term
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) term -> . factor
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) factor -> . ID
    (35) factor -> . NUMBER

    ID              shift and go to state 32
    NUMBER          shift and go to state 33

    expression                     shift and go to state 71
    term                           shift and go to state 30
    factor                         shift and go to state 31

state 63

    (19) increment_expression -> assignment_expression .

    RPAREN          reduce using rule 19 (increment_expression -> assignment_expression .)


state 64

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 72


state 65

    (18) increment_expression -> ID . INCREMENTO
    (17) assignment_expression -> ID . ASSIGN expression

    INCREMENTO      shift and go to state 73
    ASSIGN          shift and go to state 47


state 66

    (22) condition -> expression LT expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 22 (condition -> expression LT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 67

    (23) condition -> expression LE expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 23 (condition -> expression LE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 68

    (24) condition -> expression GT expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 24 (condition -> expression GT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 69

    (25) condition -> expression GE expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 25 (condition -> expression GE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 70

    (26) condition -> expression EQ expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 26 (condition -> expression EQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 71

    (27) condition -> expression NE expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 27 (condition -> expression NE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41


state 72

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 74


state 73

    (18) increment_expression -> ID INCREMENTO .

    RPAREN          reduce using rule 18 (increment_expression -> ID INCREMENTO .)


state 74

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE . statements RBRACE
    (10) statements -> . statements statement
    (11) statements -> . statement
    (12) statements -> . empty
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (36) empty -> .
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RBRACE          reduce using rule 36 (empty -> .)
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

  ! FOR             [ reduce using rule 36 (empty -> .) ]
  ! ID              [ reduce using rule 36 (empty -> .) ]
  ! RETURN          [ reduce using rule 36 (empty -> .) ]

    statements                     shift and go to state 75
    statement                      shift and go to state 15
    empty                          shift and go to state 26
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 75

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements . RBRACE
    (10) statements -> statements . statement
    (13) statement -> . for_loop
    (14) statement -> . assignment_statement
    (15) statement -> . return_statement
    (16) for_loop -> . FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE
    (20) assignment_statement -> . ID ASSIGN expression SEMICOLON
    (21) return_statement -> . RETURN expression SEMICOLON

    RBRACE          shift and go to state 76
    FOR             shift and go to state 19
    ID              shift and go to state 9
    RETURN          shift and go to state 20

    statement                      shift and go to state 27
    for_loop                       shift and go to state 16
    assignment_statement           shift and go to state 17
    return_statement               shift and go to state 18

state 76

    (16) for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE .

    FOR             reduce using rule 16 (for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 16 (for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 16 (for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 16 (for_loop -> FOR LPAREN assignment_expression SEMICOLON condition SEMICOLON increment_expression RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 7 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 74 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (declarations -> empty)
WARNING: rejected rule (statements -> empty) in state 14
